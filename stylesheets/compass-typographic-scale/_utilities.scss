// Convenience function to output double-stranded headings
@function ts-headings($levels: 1 2 3 4 5 6, $double-stranded: $ts-double-stranded) {
  $list: $ts-double-stranded-classnames;

  $ts-classtype: unquote(".");
  @if $ts-use-silent-classes {
    $ts-classtype: unquote("%");
  }

  $out: unquote('');

  @each $i in $levels {
    $out: #{$out} h#{$i}#{unquote(',')};
    @if $double-stranded {
      //$out: #{$out} #{unquote('.')}#{$i}#{unquote(',')} ;
      $out: #{$out} #{$ts-classtype}#{nth($list, $i)}#{unquote(',')} ;
    }
  }
  @return $out;
}

// ..alias for above
@function ts-headers($levels: 1 2 3 4 5 6, $double-stranded: $ts-double-stranded) {
  @return ts-headings($levels, $double-stranded);
}
// Helper function to do the scaling
@function ts-point2pixel(
  $pt,
  $equiv: $ts-base-font-size-points-equiv,
  $base: $base-font-size
) {
    @return $pt * ( $base / $equiv ) + 0px;
}


// Interface to Vertical Rhythm module
@mixin ts-size-type($size: $base-font-size, $rhythm: false) {
  $lines: lines-for-font-size($size);
  @include adjust-font-size-to($size, $lines);
  @if $rhythm {
    @include rhythm(  nth($rhythm, 1),
                      nth($rhythm, 2),
                      nth($rhythm, 3),
                      nth($rhythm, 4),
                      $size
                    );
  }
}
